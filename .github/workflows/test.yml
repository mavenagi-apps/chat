name: test

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

jobs:
  start:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup environment
        uses: ./.github/actions/setup
        with:
          node-version-file: '.nvmrc'

  lint:
    runs-on: ubuntu-latest
    needs:
      - start
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup environment
        uses: ./.github/actions/setup
        with:
          node-version-file: '.nvmrc'

      - name: Lint project
        run: pnpm lint

  vitest:
    runs-on: ubuntu-latest
    needs:
      - start
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup environment
        uses: ./.github/actions/setup
        with:
          node-version-file: '.nvmrc'

      - name: Run vitest
        run: pnpm test

  coverage:
    runs-on: ubuntu-latest
    needs:
      - start
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup environment
        uses: ./.github/actions/setup
        with:
          node-version-file: '.nvmrc'

      - name: Gather test coverage
        run: |
          SUMMARY="$(pnpm test:coverage | tail -2 | head -1)"
          TOKENS=($SUMMARY)
          echo "COVERAGE=$(echo ${TOKENS[2]})" >> $GITHUB_ENV

      - name: Add coverage comment to PR
        if: github.event_name == 'pull_request'
        uses: marocchino/sticky-pull-request-comment@v2
        with:
          message: |
            ## Test Coverage Report
            Current coverage: ${{ env.COVERAGE }}

      # - name: Create badge
      #   uses: schneegans/dynamic-badges-action@v1.7.0
      #   with:
      #     auth: ${{ secrets.GIST_SECRET }}
      #     gistID: 28b96e029bcd1c4e542ffbcf91850062
      #     filename: coverage.svg
      #     label: coverage
      #     message: ${{ env.COVERAGE }}
      #     color: lightgrey